#!/usr/bin/env bash

# shellcheck source=lib/common.sh
. "$LIB_DIR/common.sh"

# If no Governance token is defined, create one
if [ -z "$MCT_GOV" ]
then
    MCT_GOV=$(dappCreate tss-deploy DSToken "$(seth --to-bytes32 "$(seth --from-ascii "MKR")")")
    log "MCT_GOV=$MCT_GOV"
fi

# Create deploy contract
MCT_DEPLOY=$(dappCreate dss-deploy-optimized DssDeploy "$VAT_FAB" "$JUG_FAB" "$VOW_FAB" "$CAT_FAB" "$TAO_FAB" "$MCT_JOIN_FAB" "$FLAP_FAB" "$FLOP_FAB" "$FLIP_FAB" "$SPOT_FAB" "$POT_FAB" "$END_FAB" "$ESM_FAB" "$PAUSE_FAB")
log "MCT_DEPLOY=$MCT_DEPLOY"

# If no Authority is defined, create one
if [ -z "$MCT_ADM" ]
then
    MCT_ADM=$(dappCreate dss-deploy DSRoles)
    log "MCT_ADM=$MCT_ADM"
    sethSend "$MCT_ADM" 'setRootUser(address,bool)' "$ETH_FROM" true
fi

# Deploy VAT
sethSend "$MCT_DEPLOY" "deployVat()"

# Deploy MCT
sethSend "$MCT_DEPLOY" "deployTao(uint256)" "$(seth rpc net_version)"

# Deploy Taxation
sethSend "$MCT_DEPLOY" "deployTaxation()"

# Deploy Auctions
sethSend "$MCT_DEPLOY" "deployAuctions(address)" "$MCT_GOV"

# Deploy Liquidation
sethSend "$MCT_DEPLOY" "deployLiquidator()"

# Deploy End
MCT_ESM_PIT=${MCT_ESM_PIT:-"0x0000000000000000000000000000000000000000"}
MCT_ESM_MIN=${MCT_ESM_MIN:-"$(seth --to-uint256 "$(seth --to-wei 50000 "eth")")"}
sethSend "$MCT_DEPLOY" "deployShutdown(address,address,uint256)" "$MCT_GOV" "$MCT_ESM_PIT" "$MCT_ESM_MIN"

# Deploy pause
MCT_PAUSE_DELAY=${MCT_PAUSE_DELAY:-"3600"}
sethSend "$MCT_DEPLOY" "deployPause(uint256,address)" "$(seth --to-uint256 "$MCT_PAUSE_DELAY")" "$MCT_ADM"

cat > "$OUT_DIR/load-core-addr-temp" << EOF
#!/bin/bash
export MCT_DEPLOY=$MCT_DEPLOY
export MCT_GOV=$MCT_GOV
export MCT_ADM=$MCT_ADM
export MCT_VAT=$(seth call "$MCT_DEPLOY" "vat()(address)")
export MCT_JUG=$(seth call "$MCT_DEPLOY" "jug()(address)")
export MCT_CAT=$(seth call "$MCT_DEPLOY" "cat()(address)")
export MCT_VOW=$(seth call "$MCT_DEPLOY" "vow()(address)")
export MCT_JOIN_TAO=$(seth call "$MCT_DEPLOY" "taoJoin()(address)")
export MCT_FLAP=$(seth call "$MCT_DEPLOY" "flap()(address)")
export MCT_FLOP=$(seth call "$MCT_DEPLOY" "flop()(address)")
export MCT_SPOT=$(seth call "$MCT_DEPLOY" "spotter()(address)")
export MCT_POT=$(seth call "$MCT_DEPLOY" "pot()(address)")
export MCT_END=$(seth call "$MCT_DEPLOY" "end()(address)")
export MCT_ESM=$(seth call "$MCT_DEPLOY" "esm()(address)")
export MCT_PAUSE=$(seth call "$MCT_DEPLOY" "pause()(address)")
export MCT_PAUSE_PROXY=$(seth call "$(seth call "$MCT_DEPLOY" "pause()(address)")" "proxy()(address)")
export MCT_TAO=$(seth call "$MCT_DEPLOY" "tao()(address)")
EOF
